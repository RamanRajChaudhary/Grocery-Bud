{"version":3,"sources":["List.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editId","setEditId","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be4f717c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst List = ({ items, removeItem, editItem }) => {\r\n  return (\r\n    <div className=\"grocery-list\">\r\n      {items.map((item) => {\r\n        const { id, title } = item;\r\n        return (\r\n          <article key={id} className=\"grocery-item\">\r\n            <p className=\"title\">{title}</p>\r\n            <div className=\"btn-container\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"edit-btn\"\r\n                onClick={() => editItem(id)}\r\n              >\r\n                change\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"delete-btn\"\r\n                onClick={() => removeItem(id)}\r\n              >\r\n                delete\r\n              </button>\r\n            </div>\r\n          </article>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default List;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Alert = ({ type, msg, removeAlert, list }) => {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      removeAlert();\r\n    }, 3000);\r\n    return () => clearTimeout(timeout);\r\n  }, [list]);\r\n\r\n  return <p className={`alert alert-${type}`}>{msg}</p>;\r\n};\r\nexport default Alert;\r\n","import { useEffect, useState } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\nimport './App.css';\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"list\"));\n  } else {\n    return [];\n  }\n};\n\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage()); //getLocalStorage()\n  const [isEditing, setIsEditing] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      //display alert\n      showAlert(true, \"danger\", \"please enter value\");\n    } else if (name && isEditing) {\n      //deal with edit\n      setList(\n        list.map((item) => {\n          if (item.id === editId) {\n            return { ...item, title: name };\n          }\n          return item;\n        })\n      );\n      setName(\"\");\n      setEditId(null);\n      setIsEditing(false);\n      showAlert(true, \"sucess\", \"value changed\");\n    } else {\n      // show alert\n      showAlert(true, \"sucess\", \"item added to the list\");\n      const newItem = { id: new Date().getTime().toString(), title: name };\n      setList([...list, newItem]);\n      setName(\"\");\n    }\n  };\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({ show, type, msg });\n  };\n  const clearList = () => {\n    showAlert(true, \"danger\", \"empty list\");\n    setList([]);\n  };\n  const removeItem = (id) => {\n    showAlert(true, \"danger\", \"item removed\");\n    setList(list.filter((item) => item.id !== id));\n  };\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    setEditId(id);\n    setIsEditing(true);\n    setName(specificItem.title);\n  };\n  \n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n \n  return (\n    <div className=\"App\">\n       <section className=\"section-center\">\n      <form className=\"grocery-form\" onSubmit={handleSubmit}>\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\n        <h1>Grocery Bud</h1>\n        <div className=\"form-control\">\n          <input\n            type=\"text\"\n            className=\"grocery\"\n            placeholder=\"List of Items\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button type=\"submit\" className=\"submit-btn\">\n            {isEditing ? \"edit\" : \"submit\"}\n          </button>\n        </div>\n      </form>\n      {list.length > 0 && (\n        <div className=\"grocery-container\">\n          <List items={list} removeItem={removeItem} editItem={editItem} />\n          <button className=\"clear-btn\" onClick={clearList}>\n            clear Items\n          </button>\n        </div>\n      )}\n    </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}